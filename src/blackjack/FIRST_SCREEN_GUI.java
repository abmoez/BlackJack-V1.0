/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package blackjack;


import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;

/**
 *
 * @author mahmo
 */
public class FIRST_SCREEN_GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public static byte get_decks()
    {
        return Decks;
    }
    public static sound Sound;
    public FIRST_SCREEN_GUI() {
        new Thread(){
            @Override
            public void run() {
                Sound.backgroundMusicPlay();
                Sound_stat = true;
            }
        }.start();
        Sound = new sound();
        data = new Data_keeper();
        initComponents();
        new Thread(){
            @Override
            public void run() {
                Toolkit tkit = Toolkit.getDefaultToolkit();
                setCursor(tkit.createCustomCursor(new javax.swing.ImageIcon(getClass().getResource("/blackjack/Pictures/Cursors/default.png")).getImage(), new Point(0, 0), "default_m"));
                start_button.setCursor(tkit.createCustomCursor(new javax.swing.ImageIcon(getClass().getResource("/blackjack/Pictures/Cursors/hand.png")).getImage(), new Point(0, 0), "default_m"));
                exit_button.setCursor(tkit.createCustomCursor(new javax.swing.ImageIcon(getClass().getResource("/blackjack/Pictures/Cursors/hand.png")).getImage(), new Point(0, 0), "default_m"));
                right_arrow.setCursor(tkit.createCustomCursor(new javax.swing.ImageIcon(getClass().getResource("/blackjack/Pictures/Cursors/hand.png")).getImage(), new Point(0, 0), "default_m"));
                left_arrow.setCursor(tkit.createCustomCursor(new javax.swing.ImageIcon(getClass().getResource("/blackjack/Pictures/Cursors/hand.png")).getImage(), new Point(0, 0), "default_m"));
                unmuted.setCursor(tkit.createCustomCursor(new javax.swing.ImageIcon(getClass().getResource("/blackjack/Pictures/Cursors/hand.png")).getImage(), new Point(0, 0), "default_m"));
            }
        }.start();
        center_screen();
        Decks = 1;
        
        if(!Sound.isMusicOn())
        {
            unmuted.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blackjack/Pictures/Others/mute.png")));
        }
        else
        {
            unmuted.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blackjack/Pictures/Others/volume.png")));
        }
        //jButton1.setCursor(Toolkit.getDefaultToolkit().createCustomCursor(new ImageIcon("cursor_start.png").getImage(), new Point(0,0), "mycursor"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        black_jack_logo = new javax.swing.JLabel();
        exit_button = new javax.swing.JButton();
        start_button = new javax.swing.JButton();
        unmuted = new javax.swing.JToggleButton();
        right_arrow = new javax.swing.JButton();
        left_arrow = new javax.swing.JButton();
        deck_label = new javax.swing.JLabel();
        Decks_value = new javax.swing.JLabel();
        wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BlackJack");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/blackjack/Pictures/Logo/blackjack_logo.png")));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        black_jack_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blackjack/Pictures/Logo/First_Logo.gif"))); // NOI18N
        getContentPane().add(black_jack_logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 80, -1, -1));

        exit_button.setBackground(new java.awt.Color(60, 63, 65));
        exit_button.setForeground(new java.awt.Color(0, 0, 0));
        exit_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blackjack/Pictures/Others/exit_first.png"))); // NOI18N
        exit_button.setAlignmentY(0.0F);
        exit_button.setBorderPainted(false);
        exit_button.setContentAreaFilled(false);
        exit_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exit_button.setFocusPainted(false);
        exit_button.setMargin(new java.awt.Insets(0, 0, 0, 0));
        exit_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exit_buttonMouseEntered(evt);
            }
        });
        exit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(exit_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(385, 320, 130, 90));

        start_button.setBackground(new java.awt.Color(60, 63, 65));
        start_button.setForeground(new java.awt.Color(0, 0, 0));
        start_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blackjack/Pictures/Others/start.png"))); // NOI18N
        start_button.setAlignmentY(0.0F);
        start_button.setBorderPainted(false);
        start_button.setContentAreaFilled(false);
        start_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        start_button.setFocusPainted(false);
        start_button.setMargin(new java.awt.Insets(0, 0, 0, 0));
        start_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                start_buttonMouseEntered(evt);
            }
        });
        start_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(start_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 200, 260, 120));

        unmuted.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blackjack/Pictures/Others/volume.png"))); // NOI18N
        unmuted.setBorderPainted(false);
        unmuted.setContentAreaFilled(false);
        unmuted.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        unmuted.setFocusPainted(false);
        unmuted.setMargin(new java.awt.Insets(0, 0, 0, 0));
        unmuted.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                unmutedMouseEntered(evt);
            }
        });
        unmuted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unmutedActionPerformed(evt);
            }
        });
        getContentPane().add(unmuted, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 0, -1, -1));

        right_arrow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blackjack/Pictures/Others/right-arrow.png"))); // NOI18N
        right_arrow.setBorderPainted(false);
        right_arrow.setContentAreaFilled(false);
        right_arrow.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        right_arrow.setFocusPainted(false);
        right_arrow.setMargin(new java.awt.Insets(0, 0, 0, 0));
        right_arrow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                right_arrowMouseEntered(evt);
            }
        });
        right_arrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                right_arrowActionPerformed(evt);
            }
        });
        getContentPane().add(right_arrow, new org.netbeans.lib.awtextra.AbsoluteConstraints(872, 100, 20, -1));

        left_arrow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blackjack/Pictures/Others/left-arrow.png"))); // NOI18N
        left_arrow.setBorderPainted(false);
        left_arrow.setContentAreaFilled(false);
        left_arrow.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        left_arrow.setFocusPainted(false);
        left_arrow.setMargin(new java.awt.Insets(0, 0, 0, 0));
        left_arrow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                left_arrowMouseEntered(evt);
            }
        });
        left_arrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                left_arrowActionPerformed(evt);
            }
        });
        getContentPane().add(left_arrow, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 100, 20, -1));

        deck_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        deck_label.setForeground(new java.awt.Color(51, 0, 51));
        deck_label.setText("Decks");
        getContentPane().add(deck_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(788, 100, -1, 20));

        Decks_value.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Decks_value.setForeground(new java.awt.Color(0, 0, 102));
        Decks_value.setText("1");
        getContentPane().add(Decks_value, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 100, -1, 20));

        wallpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blackjack/Pictures/Background/First_wallpaper.jpg"))); // NOI18N
        getContentPane().add(wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_buttonActionPerformed
        new Thread(){
            @Override
            public void run() {
                Sound.exit();
                try {
                    Thread.sleep(2000);
                } catch (InterruptedException ex) {}
                System.exit(0);
            }
        }.start();
    }//GEN-LAST:event_exit_buttonActionPerformed

    private void start_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_start_buttonActionPerformed
        Sound.start();
        Deck = new Cards_Deck(FIRST_SCREEN_GUI.get_decks());
        if(data.file_exist())
        {
            long temp = Long.parseLong(data.Read_encrypted_next());
            player1 = new Player(Deck, temp);
        }
        else
        {
            player1 = new Player(Deck);
        }
        new BET_SCREEN_GUI().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_start_buttonActionPerformed

    private void unmutedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unmutedActionPerformed
        //right a code to mute
        if(Sound.isMusicOn())
        {
            unmuted.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blackjack/Pictures/Others/mute.png")));
            Sound.backgroundMusicPause();
            Sound_stat = false;
        }
        else
        {
            unmuted.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blackjack/Pictures/Others/volume.png")));
            Sound.backgroundMusicPlay();
            Sound_stat = true;
        }

    }//GEN-LAST:event_unmutedActionPerformed

    private void right_arrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_right_arrowActionPerformed
        if(Decks<4)
        {
            Sound.decks();
            Decks*=2;
        }
        else if(Decks < 6)
        {
            Sound.decks();
            Decks+=2;
        }
        Decks_value.setText(Byte.toString(Decks));
    }//GEN-LAST:event_right_arrowActionPerformed

    private void left_arrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_left_arrowActionPerformed
        if(Decks>4)
        {
            Sound.decks();
            Decks-=2;
        }
        else if(Decks > 1)
        {
            Sound.decks();
            Decks/=2;
        }
        Decks_value.setText(Byte.toString(Decks));
    }//GEN-LAST:event_left_arrowActionPerformed

    private void start_buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_start_buttonMouseEntered
        Sound.buttoons();
    }//GEN-LAST:event_start_buttonMouseEntered

    private void exit_buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_buttonMouseEntered
        Sound.buttoons();
    }//GEN-LAST:event_exit_buttonMouseEntered

    private void unmutedMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unmutedMouseEntered
        Sound.buttoons();
    }//GEN-LAST:event_unmutedMouseEntered

    private void left_arrowMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_left_arrowMouseEntered
        Sound.buttoons();
    }//GEN-LAST:event_left_arrowMouseEntered

    private void right_arrowMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_right_arrowMouseEntered
        Sound.buttoons();
    }//GEN-LAST:event_right_arrowMouseEntered

    /**
     * @param args the command line arguments
     */
    private void center_screen() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }
    public static void refresh_player()
    {
        long temp = player1.get_bank_value();
        player1 = new Player(Deck, temp);
    }
    public static boolean Sound_stat;
    public static Data_keeper data;
    public static Cards_Deck Deck;
    public static Player player1;
    private static byte Decks;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Decks_value;
    private javax.swing.JLabel black_jack_logo;
    private javax.swing.JLabel deck_label;
    private javax.swing.JButton exit_button;
    private javax.swing.JButton left_arrow;
    private javax.swing.JButton right_arrow;
    private javax.swing.JButton start_button;
    private javax.swing.JToggleButton unmuted;
    private javax.swing.JLabel wallpaper;
    // End of variables declaration//GEN-END:variables
}